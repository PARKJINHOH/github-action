name: Spring & React - docker
# https://rhysd.github.io/actionlint/

on:
  push:
    branches: [ "develop-docker" ]
  pull_request:
    branches: [ "develop-docker" ]

permissions:
  contents: read

env:  
  working-directory-be: ./spring-action
  working-directory-fe: ./react-action

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}

    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        ref: develop-docker
        repository: PARKJINHOH/github-action
        token: ${{ secrets.TOKEN_GITHUB }}
        
    - name : Run Paths Filter
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          backend:
            - 'spring-action/**'
          frontend:
            - 'react-action/**'
  
  backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-latest

    steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: checkout
      uses: actions/checkout@v3
      with:
        ref: develop-docker
        repository: PARKJINHOH/github-action
        token: ${{ secrets.TOKEN_GITHUB }}

    - name: Cache Gradle
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Gradle wrapper & build
      working-directory: ${{ env.working-directory-be }}
      run: |
        chmod +x ./gradlew
        ./gradlew clean bootJar

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }} # https://docs.docker.com/docker-hub/access-tokens
    
    - name: web docker build and push
      working-directory: ${{ env.working-directory-be }}
      run: |
        pwd
        ls -al .
        # The requested image's platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested 에러시 아래 사용.
        # docker build -t ${{ secrets.DOCKER_REPO }}/gitaction-be .
        docker build --platform linux/arm64 -t ${{ secrets.DOCKER_REPO }}/gitaction-be backend/
        docker push ${{ secrets.DOCKER_REPO }}/gitaction-be
        
  backend-docker:
    needs: backend
    runs-on: ubuntu-latest
      
    steps:
    - name: docker pull
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_IP }}
        username: ubuntu
        password: ${{ secrets.SSH_PASSWORD }}
        port: 22
        key: ${{ secrets.SSH_RSA }}
        script: |
          sudo docker pull ${{ secrets.DOCKER_REPO }}/gitaction-be

  frontend:
    needs: changes
    #if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-22.04
    defaults:
        run:
            working-directory: ${{ env.working-directory-fe }}

    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        ref: develop-docker
        repository: PARKJINHOH/github-action
        token: ${{ secrets.TOKEN_GITHUB }}

    - uses: actions/cache@v3
      id: npm-cache
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    - if: steps.npm-cache.outputs.cache-hit == 'true'
      run: echo 'npm cache hit!'
    - if: steps.npm-cache.outputs.cache-hit != 'true'
      run: echo 'npm cache missed!'
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2        
        
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: web docker build and push
      run: |
        pwd
        ls -al .
        docker build --platform linux/arm64 -t ${{ secrets.DOCKER_REPO }}/gitaction-fe frontend/
        docker push ${{ secrets.DOCKER_REPO }}/gitaction-fe
